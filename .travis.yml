language: php

php:
  - 5.5

mysql:
  database: drupal
  username: root
  encoding: utf8

before_install:
  - sudo apt-get update > /dev/null
  - composer self-update

  # Install grunt.
  - npm install -g grunt-cli bower

  # Install Sass and Compass for Grunt to work.
  - gem install compass

  # Configure imgur bash script to upload images on failure.
  - npm install -g jshon
  - chmod +x imgur

install:
  # install php packages required for running a web server from drush on php 5.3
  - sudo apt-get install -y --force-yes php5-cgi php5-mysql

  # install drush
  - export PATH="$HOME/.composer/vendor/bin:$PATH"
  - composer global require drush/drush:6.*
  - phpenv rehash

  - npm install -g yo bower grunt-cli casperjs
  - npm install

  # Test the Yeoman generator.
  - npm test

  # Link the generator.
  - npm link

before_script:
  - mkdir $TRAVIS_BUILD_DIR/../build
  - cd $TRAVIS_BUILD_DIR/../build
  # Initiate the generator to build using CLI. We use the --no-insight flag to
  # prevent yo from waiting for user input about sending anonymous usgae
  # statistics.
  - yo hedley --no-insight --project-name=skeleton --github-repo=https://github.com/Foo/skeleton --db=skeleton --db-user=root --db-pass= --drupal-url=http://127.0.0.1

  # Configure client.
  - cd client
  - cp config.travis.json config.json
  - grunt serve > ~/grunt.log 2>&1 &
  - cd ..

  - cp $TRAVIS_BUILD_DIR/travis/aliases.drushrc.php ~/.drush/
  - cp $TRAVIS_BUILD_DIR/travis/behat.local.yml.travis behat/behat.local.yml

  # Start a web server on port 8080, run in the background; wait for
  # initialization.
  - cd www
  - drush runserver 127.0.0.1:8080 &
  - until netstat -an 2>/dev/null | grep '8080.*LISTEN'; do true; done
  - cd ../

  # Create display.
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start

  # Wait for Grunt to finish loading.
  - until $(curl --output /dev/null --silent --head --fail http://localhost:9000); do sleep 1; echo '.'; done

script:
  # Run PhantomCSS tests.
  - cd phantomcss
  - casperjs test dashboard.js

  # Upload failed images to imgur
  - bash scan_phantomcss_fails.sh > ~/phantomcss.log 2>&1 &
  # Print a list of images created on imgur.
  - cat ~/phantomcss.log

  # Run PhantomJs.
  - phantomjs --webdriver=4444 > ~/phantomjs.log 2>&1 &
  # Run Behat tests.
  - cd ../behat
  - ./bin/behat --tags=~@wip

  # Print logs.
  - cat ~/grunt.log
  - cat ~/phantomjs.log
